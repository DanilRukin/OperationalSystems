version: '3'
services:
  database:
    container_name: postgres_container
    image: postgres
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "Messanger_test"
      POSTGRES_USER: "MessangerServer"
      POSTGRES_PASSWORD: "qwerty123@"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - "C:\\Users\\Rukin\\source\\repos\\OperationalSystems\\lr_3\\volumes\\database\\postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 10s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      test_network:
        ipv4_address: 192.168.1.103


  server:
    build:
      context: ./Messanger.Server
      dockerfile: Dockerfile
    image: messanger-server
    container_name: messanger-server
    depends_on:
      - database
    logging:
      driver: "json-file"
      options: 
        max-size: "10m"
        max-file: "3"
    ports:
      - "8080:80"
    volumes:
      - "C:\\Users\\Rukin\\source\\repos\\OperationalSystems\\lr_3\\volumes\\server\\appsettings.json:/app/appsettings.json"
    deploy:
       resources:
         limits:
           cpus: '0.50'
           memory: 512M
         reservations:
           cpus: '0.25'
           memory: 256M
    restart: always
    security_opt:
      - seccomp=unconfined
    networks:
      test_network:
        ipv4_address: 192.168.1.104


  client_1:
    build:
      context: ./Messanger.Client
      dockerfile: Dockerfile
    image: messanger-client_1
    container_name: messanger-client_1
    depends_on:
      - server
    #command: -it bash
    tty: true 
    stdin_open: true
    logging:
      driver: "json-file"
      options: 
        max-size: "10m"
        max-file: "3"
    ports:
      - "8081:80"
    volumes:
      - "C:\\Users\\Rukin\\source\\repos\\OperationalSystems\\lr_3\\volumes\\client_1\\appsettings.json:/app/appsettings.json"
    deploy:
       resources:
         limits:
           cpus: '0.50'
           memory: 512M
         reservations:
           cpus: '0.25'
           memory: 256M
    restart: always
    security_opt:
      - seccomp=unconfined
    networks:
      test_network:
        ipv4_address: 192.168.1.105


  client_2:
    build:
      context: ./Messanger.Client
      dockerfile: Dockerfile
    image: messanger-client_2
    container_name: messanger-client_2
    depends_on:
      - server
    #command: -it bash
    tty: true
    stdin_open: true
    logging:
      driver: "json-file"
      options: 
        max-size: "10m"
        max-file: "3"
    ports:
      - "8082:80"
    volumes:
      - "C:\\Users\\Rukin\\source\\repos\\OperationalSystems\\lr_3\\volumes\\client_2\\appsettings.json:/app/appsettings.json"
    deploy:
       resources:
         limits:
           cpus: '0.50'
           memory: 512M
         reservations:
           cpus: '0.25'
           memory: 256M
    restart: always
    security_opt:
    - seccomp=unconfined
    networks:
      test_network:
        ipv4_address: 192.168.1.106

networks:
  test_network:
    ipam:
      #driver: host
      config:
        - subnet: "192.168.1.0/24"
